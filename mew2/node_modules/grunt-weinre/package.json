{
  "name": "grunt-weinre",
  "version": "0.0.2",
  "description": "Grunt task to run a weinre server to debug your mobile web site/app.",
  "scripts": {
    "test": "grunt test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ChrisWren/grunt-weinre.git"
  },
  "keywords": [
    "gruntplugin",
    "weinre",
    "server"
  ],
  "author": {
    "name": "Chris Wren"
  },
  "license": "MIT",
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-release": "~0.5.1",
    "grunt-contrib-jshint": "~0.6.2",
    "matchdep": "~0.1.2",
    "grunt-mdlint": "0.0.0"
  },
  "dependencies": {
    "weinre": "~2.0.0-pre-HH0SN197"
  },
  "readme": "# grunt-weinre\n> Run [weinre](http://people.apache.org/~pmuellr/weinre/) as a grunt task for easy configuration and integration with the rest of your workflow\n\n[![NPM version](https://badge.fury.io/js/grunt-weinre.png)](http://badge.fury.io/js/grunt-weinre) [![Dependency Status](https://gemnasium.com/ChrisWren/grunt-weinre.png)](https://gemnasium.com/ChrisWren/grunt-weinre)\n\n## Getting Started\nIf you haven't used grunt before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a gruntfile as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n\n```shell\nnpm install grunt-weinre --save-dev\n```\n\nThen add this line to your project's `Gruntfile.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-weinre');\n```\n\n## Documentation\n\n### Usage\nThe minimal usage of weinre runs with no options:\n```js\nweinre: {\n  dev: {}\n}\n```\n\n### Recommended Usage\n\nThe default HTTP port of 8080 is pretty popular, so offsetting it by 2 may help you dodge a collision. Also setting the `boundHost` to `-all-` will let your mobile devices connect via your local ip address, since the default `localhost` won't work for them.\n\n```js\nweinre: {\n  dev: {\n  options: {\n      httpPort: 8082,\n      boundHost: '-all-'\n    }\n  }\n}\n```\n\n### Usage with all available options(with their default values):\n\n```js\nweinre: {\n  dev: {\n    options: {\n      httpPort: 8080,\n      boundHost: 'localhost',\n      verbose: false,\n      debug: false,\n      readTimeout: 5,\n      deathTimeout: 15\n    }\n  }\n}\n```\n\n#### Running weinre concurrently\nA common use case is to run `weinre` with other tasks concurrently. This can be achieved with the following config for the [grunt-concurrent](https://github.com/sindresorhus/grunt-concurrent) plugin which runs weinre, [nodemon](https://github.com/ChrisWren/grunt-nodemon), [node-inspector](https://github.com/ChrisWren/grunt-node-inspector), and [watch](https://github.com/gruntjs/grunt-contrib-watch) in a single terminal tab:\n\n```js\nconcurrent: {\n  dev: {\n    tasks: ['weinre', 'nodemon', 'node-inspector', 'watch'],\n    options: {\n      logConcurrentOutput: true\n    }\n  }\n}\n```\n\n### Options\n\n#### httpPort\nType: `Number` Default: `8080`\n\nPort to run the http server on.\n\n### boundHost \nType: `String` Default: `'localhost'`\n\nIP address to bind the server to.\n\n### verbose\nType: `Boolean` Default: `false`\n\nPrint more diagnostics.\n\n### debug\nType: `Boolean` Default: `false`\n\nPrint even more diagnostics.\n\n### readTimeout\nType: `Number` Default: `5`\n\nSeconds to wait for a client message.\n\n### deathTimeout\nType: `Number` Default: `3 * readTimeout`\n\nSeconds to wait to kill client.\n\n# Changelog\n\n**0.0.1** - Initial release\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/ChrisWren/grunt-weinre/issues"
  },
  "_id": "grunt-weinre@0.0.2",
  "dist": {
    "shasum": "de918bd16e2805a58aa51ed6fe06b19090201492"
  },
  "_from": "grunt-weinre@",
  "_resolved": "https://registry.npmjs.org/grunt-weinre/-/grunt-weinre-0.0.2.tgz"
}
