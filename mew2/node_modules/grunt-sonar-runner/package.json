{
  "name": "grunt-sonar-runner",
  "description": "Sonar Analysis Runner from grunt. The major version is kept in sync with sonar runner distribution version.",
  "version": "2.3.1",
  "homepage": "https://github.com/skhatri/grunt-sonar-runner",
  "author": {
    "name": "Suresh Khatri",
    "email": "servlet2@msn.com"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com/skhatri/grunt-sonar-runner.git"
  },
  "bugs": {
    "url": "https://github.com/skhatri/grunt-sonar-runner/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/skhatri/grunt-sonar-runner/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.10"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt": "~0.4.2",
    "grunt-mocha-test": "~0.8.2",
    "should": "~3.1.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.2"
  },
  "keywords": [
    "gruntplugin",
    "sonar",
    "sonar-runner"
  ],
  "readme": "# grunt-sonar-runner\n\n> Sonar Analysis Runner from grunt\n\n## Getting Started\nThis plugin requires Grunt `~0.4.2`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-sonar-runner --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-sonar-runner');\n```\n\n## The \"sonarRunner\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `sonarRunner` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\nsonarRunner: {\n        analysis: {\n            options: {\n                debug: true,\n                separator: '\\n',\n                sonar: {\n                    host: {\n                        url: 'http://localhost:9000'\n                    },\n                    jdbc: {\n                        url: 'jdbc:mysql://localhost:3306/sonar',\n                        username: 'sonar',\n                        password: 'sonar'\n                    },\n\n                    projectKey: 'sonar:grunt-sonar-runner:0.1.0',\n                    projectName: 'Grunt Sonar Runner',\n                    projectVersion: '0.10',\n                    sources: ['test'].join(','),\n                    language: 'js',\n                    sourceEncoding: 'UTF-8'\n                }\n            }\n        }\n    }\n});\n```\n\n### Options\n\n#### options.debug\nType: `Boolean`\nDefault value: `'false'`\n\nA Boolean value to display debug information when preparing sonar analysis.\n\n#### options.separator\nType: `String`\nDefault value: os.EOL\n\nA string value representing a new line character to separate individual sonar properties\n\n\n#### options.sonar.host.url\nType: `String`\nDefault value: 'http://localhost:9000'\n\nSonar Dashboard URL\n\n#### options.sonar.jdbc.url\nType: `String`\nDefault value: ''\n\nJDBC connection url\n\n\n\n#### options.sonar.jdbc.username\nType: `String`\nDefault value: ''\n\nJDBC connection username\n\n\n#### options.sonar.jdbc.password\nType: `String`\nDefault value: ''\n\nJDBC connection password\n\n\n#### options.sonar.sources\nType: `String`\nDefault value: ''\n\ncomma separated list of directories to analyse. All js files in the provided directories will be included.\n\n\n#### options.sonar.projectKey\nType: `String`\nDefault value: ''\n\nproject key usually of form group:artifactId:version\n\n\n\n\n#### options.sonar.projectName\nType: `String`\nDefault value: ''\n\nProject Summary\n\n\n\n#### options.sonar.projectVersion\nType: `String`\nDefault value: ''\n\nCurrent project build version\n\n\n\n\n\n### Usage Examples\n\nThe configuration code below shows all possible options that are currently supported by the plugin. Any additional sonar properties can be added right inside the sonar object literal.\n\n```js\ngrunt.initConfig({\n  sonarRunner: {\n              analysis: {\n                  options: {\n                      debug: true,\n                      separator: '\\n',\n                      sonar: {\n                          host: {\n                              url: 'http://localhost:9000'\n                          },\n                          jdbc: {\n                              url: 'jdbc:mysql://localhost:3306/sonar',\n                              username: 'sonar',\n                              password: 'sonar'\n                          },\n\n                          projectKey: 'sonar:grunt-sonar-runner:0.1.0',\n                          projectName: 'Grunt Sonar Runner',\n                          projectVersion: '0.10',\n                          sources: ['test'].join(','),\n                          language: 'js',\n                          sourceEncoding: 'UTF-8'\n                      }\n                  }\n              }\n          }\n});\n```\n\nTo run\n```\ngrunt sonarRunner:analysis\n```\n\n## Release History\n",
  "readmeFilename": "README.md",
  "_id": "grunt-sonar-runner@2.3.1",
  "dist": {
    "shasum": "3cda411b7a30d898f47d126f992706fdf7332c5f"
  },
  "_from": "grunt-sonar-runner@",
  "_resolved": "https://registry.npmjs.org/grunt-sonar-runner/-/grunt-sonar-runner-2.3.1.tgz"
}
